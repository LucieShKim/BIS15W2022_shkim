)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 28)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 18)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 28)
})
}
shinyApp(ui, server)
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 15)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 15)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
#radioButtons("x","Select Fill Variable",choice=c("trophic.guild","thermoregulation"),selected = "trophic.guild"),
#plotOutput("plot",width = "600px", height = "500px")
)
server <- function(input, output, session) {
output$plot<-renderPlot({
ggplot(homerange, aes_string(x="locomotion",fill=input$x))+
geom_bar(position="dodge", color="black", alpha=0.8)+
theme_light(base_size = 30)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choice=c("trophic.guild","thermoregulation"),selected = "trophic.guild"),
plotOutput("plot",width = "600px", height = "500px")
)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choices = ("trophic.guild","thermoregulation"),selected = "trophic.guild"),
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choices = ("trophic.guild","thermoregulation"),selected = "trophic.guild"),
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choices = ("trophic.guild", "thermoregulation"),selected = "trophic.guild"),
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
#radioButtons("x","Select Fill Variable",choices = ("trophic.guild", "thermoregulation"),selected = "trophic.guild"),
plotOutput("plot",width = "600px", height = "500px")
)
server <- function(input, output, session) {
output$plot<-renderPlot({
ggplot(homerange, aes_string(x="locomotion",fill=input$x))+
geom_bar(position="dodge", color="black", alpha=0.8)+
theme_light(base_size = 30)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choices = c("trophic.guild", "thermoregulation"),selected = "trophic.guild"),
plotOutput("plot",width = "600px", height = "500px")
)
server <- function(input, output, session) {
output$plot<-renderPlot({
ggplot(homerange, aes_string(x="locomotion",fill=input$x))+
geom_bar(position="dodge", color="black", alpha=0.8)+
theme_light(base_size = 30)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x","Select Fill Variable",choices = c("trophic.guild", "thermoregulation"),selected = "trophic.guild"),
plotOutput("plot",width = "600px", height = "500px")
)
server <- function(input, output, session) {
output$plot<-renderPlot({
ggplot(homerange, aes_string(x="locomotion",fill=input$x))+
geom_bar(position="dodge", color="black", alpha=0.8)+
theme_light(base_size = 30)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 17)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "500px", height = "400px")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(radioButtons("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "1000px", height = "800px")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "800px", height = "800px")
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "800px", height = "700px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="black", alpha=0.8) +
theme_light(base_size = 17)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(radioButtons("x", "Select Fill Variable", choices = c("trophic.guild", "thermoregulation"),
selected = "trophic.guild"),
plotOutput("plot")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x="locomotion", fill=input$x))+
geom_bar(position="dodge")
})
}
shinyApp(ui, server)
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="gray", alpha=0.8) +
theme_light(base_size = 17)
library(shiny)
ui <- fluidPage(
radioButtons("x", "Select X Variable", choices = c("trophic.guild", "thermoregulation"), selected = "trophic.guild"),
plotOutput("plot", width = "800px", height = "700px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(data=homerange, aes_string(x = "locomotion", fill=input$x)) +
geom_bar(position="dodge", color="gray", alpha=0.8) +
theme_light(base_size = 17)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Homerange Locomotion"),
radioButtons("x", "Select Fill Variable", choices=c("trophic.guild", "thermoregulation"), selected="trophic.guild"),
plotOutput("plot", width="600px", height="500px")
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(homerange, aes_string(x="locomotion", fill=input$x)) +
geom_bar(position="dodge", alpha=0.8, color="black") +
theme_light(base_size=18) +
labs(x=NULL, y=NULL, fill="Fill Variable")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="red", alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="red", alpha=0.6)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)),# hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)),# hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)),# hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
library(shiny)
ui <- fluidPage(titlePanel("Log 10 Homerange by Taxon"),
sidebarLayout(
sidebarPanel(
selectInput("taxon","Select Taxon of Interest:", choices = unique(homerange$taxon)),# hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
mainPanel(
plotOutput("taxonPlot"))
)
)
server <- function(input, output, session) {
output$taxonPlot<-renderPlot({
homerange%>%
filter(taxon==input$taxon)%>%
ggplot(aes(x=log10.hra))+
geom_density(color="black", fill="red", alpha=0.5)
})
}
shinyApp(ui, server)
install.packages("shinydashboard")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(shiny)
library(shinydashboard)
require(janitor)
library(palmerpenguins)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
ui <- fluidPage(
titlePanel("Log 10 Homerange by Taxon"), # give the page a title
# generate a row with a sidebar
sidebarLayout(
# define the sidebar with one input
sidebarPanel(
selectInput("taxon", " Select Taxon of Interest:", choices=unique(homerange$taxon)), hr(),
helpText("Reference: Tamburello N, Cote IM, Dulvy NK (2015) Energy and the scaling of animal space use. The American Naturalist 186(2):196-211.")),
# create a spot for the barplot
mainPanel(
plotOutput("taxonPlot"))
)
)
# define a server for the Shiny app
server <- function(input, output, session) {
# fill in the spot we created for a plot
output$taxonPlot <- renderPlot({
homerange %>%
filter(taxon == input$taxon) %>%
ggplot(aes(x=log10.hra)) +
geom_density(color="black", fill="red", alpha=0.6)
})
}
shinyApp(ui, server)
runApp('C:/Users/ujm71/OneDrive/바탕 화면/app/homerange_app2.R')
source("C:/bis15folder/BIS15W2022_shkim/.Rprofile")
runApp('C:/Users/ujm71/OneDrive/바탕 화면/app/homerange_app2.R')
runApp('C:/Users/ujm71/OneDrive/바탕 화면/app/homerange_app2.R')
.libPaths()
runApp('C:/Users/ujm71/OneDrive/바탕 화면/app/homerange_app2.R')
runApp('C:/Users/ujm71/OneDrive/바탕 화면/app/homerange_app2.R')
